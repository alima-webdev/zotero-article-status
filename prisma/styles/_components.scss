/* Template Structure */
.prisma-diagram {
    display: grid;
    grid-template-columns: $title-column-width 1fr 1fr;
    grid-template-rows: repeat(1fr);
}

/* Box Columns */
.col:nth-child(3n + 4),
.col:nth-child(3n + 5) {
    display: flex;
    flex-direction: column;
}

/* Middle Column */
.col:nth-child(3n + 4) {
    margin-right: calc($column-gap / 2);
}

/* Exclusion Column */
.col:nth-child(3n + 5) .box {
    margin-left: calc($column-gap / 2);
}

/* Wide Column */
.col-wide {
    grid-area: 1 / 2 / 2 / 4;
}

/* Section Titles */
.col:nth-child(3n + 3) {
    padding-right: $column-gap;
    padding-bottom: $row-gap;
}

/* Table Title */
.table-title {
    padding: $title-padding;
    text-align: center;
    margin-bottom: $row-gap;
}

/* Section */
.section-title-container {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;

    padding: $section-title-padding;
}

.section-title {
    padding: $section-title-inner-padding;
    transform-origin: center center;
    transform: rotate(-90deg);
}

/* Box */
.box-container {
    position: relative;

    &.tall {
        flex: 1;
    }
}

.box {
    position: relative;
    padding: $box-padding;
}

/* Template Style / Theme */
.table-title {
    font-family: $title-font-family;
    font-size: $title-font-size;
    font-weight: $title-font-weight;

    background: $title-background;
    border: $title-border;
    border-radius: $title-border-radius;
}

.section-title-container {
    font-family: $section-title-font-family;
    font-size: $section-title-font-size;
    font-weight: $section-title-font-weight;

    background: $section-title-background;
    border: $section-title-border;
    border-radius: $section-title-border-radius;
}

.box {
    font-family: $box-font-family;
    font-size: $box-font-size;
    font-weight: $box-font-weight;

    background: $box-background;
    border: $box-border;
    border-radius: $box-border-radius;
}

.indent {
    margin-left: $indent-margin;
}

/* Arrow */
.arrow {
    position: absolute;
    z-index: -1;

    &.to-bottom {
        left: 50%;
        top: 0;
        bottom: calc($arrow-size / 2);
        transform: translateX(-50%);

        svg {
            position: absolute;
            left: -0.5px;
            bottom: -4px;
            height: 100%;
            transform: translateX(-50%);
        }
    }

    &.to-right {
        top: 50%;
        left: 100%;
        width: $column-gap;
        transform: translateY(-50%) translateX(calc($arrow-size / 4 * -1));

        svg {
            position: absolute;
            top: -0.5px;
            right: -3px;
            transform: translateY(-50%);
        }
    }

}
.arrow-svg > * {
    fill: black;
}